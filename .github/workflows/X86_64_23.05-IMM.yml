#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt-23.05 X86_64-IMM

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  watch:
    types: [started]
    
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-23.05
  # REPO_BRANCH: master
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
           
    steps:

    - name: 检查服务器配置
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        
    - name: 校验
      uses: actions/checkout@v3.1.0  
      
    - name: 可用磁盘空间
      run: |
           echo "Free space:"
           df -h
           
    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E apt-get -qq install libfuse-dev
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 克隆源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        sed -i '$a src-git kiddin9 https://github.com/kiddin9/openwrt-packages.git;master' feeds.conf.default
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H<br/>")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        
    - name: 更新程序包
      env:
        SCKEY: ${{ secrets.ACTIONS_TRIGGER_PAT }}
      run: |
        ls
        cd openwrt/package
        mkdir NeoBird
        cd NeoBird
        git clone -b v5 https://github.com/sbwml/luci-app-mosdns.git
        
    - name: 文件修补一
      run: |        
        cp -f patch/rc.local openwrt/package/base-files/files/etc/rc.local
        cd openwrt
        curl -sfL https://github.com/leesuncom/R619AC-X86-IM-23.05/raw/main/patch/99-default-settings-chinese -o package/emortal/default-settings/files/99-default-settings-chinese
        sed -i 's/^IMG_PREFIX\:\=.*/IMG_PREFIX:=$(VERSION_DIST_SANITIZED)-$(shell TZ=UTC-8 date +"%Y.%m.%d-%H%M")-$(IMG_PREFIX_VERNUM)$(IMG_PREFIX_VERCODE)$(IMG_PREFIX_EXTRA)$(BOARD)$(if $(SUBTARGET),-$(SUBTARGET))/g' include/image.mk
        sed -i '/DISTRIB_REVISION/d' package/base-files/files/etc/openwrt_release
        echo "DISTRIB_REVISION='$(date "+%Y.%m.%d")'" >> package/base-files/files/etc/openwrt_release
        sed -i '/DISTRIB_DESCRIPTION/d' package/base-files/files/etc/openwrt_release
        echo "DISTRIB_DESCRIPTION='NeoBird Build IMM@$(TZ=UTC-8 date +%Y.%m.%d-%H%M)'" >> package/base-files/files/etc/openwrt_release
        sed -i 's/192.168.1.1/192.168.1.2/g' package/base-files/files/bin/config_generate
        sed -i 's/ImmortalWrt/NeoBird/g' package/base-files/files/bin/config_generate
        sed -i 's/Os/O2/g' include/target.mk
        
    - name: 更新订阅源
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: 文件修补二
      run: |
        cd openwrt
        git clone -b openwrt-22.03 https://github.com/openwrt/openwrt.git openwrt-22.03
        # 回滚 iptables 为 1.8.7（1.8.8有一个致命bug，当上游升级至1.8.9时可以去除下面3行；具体参见https://www.netfilter.org/projects/iptables/files/changes-iptables-1.8.9.txt）
        rm -rf package/network/utils/iptables
        cp -rf openwrt-22.03/package/network/utils/iptables package/network/utils/iptables
        wget -P package/network/utils/iptables/patches/ https://github.com/coolsnowwolf/lede/raw/master/package/network/utils/iptables/patches/900-bcm-fullconenat.patch
                
    - name: 生成配置文件
      run: |
        cd openwrt
        rm -f ./.config*
        touch ./.config
        
        #
        # ========================固件定制部分========================
        # 
        # 
        # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
        # 
        # 以下为定制化固件选项和说明:
        #
        #
        # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
        # 
        #          =========================================
        #         |  # 取消编译VMware镜像:                   |
        #         |  cat >> .config <<EOF                   |
        #         |  # CONFIG_VMDK_IMAGES is not set        |
        #         |  EOF                                    |
        #          =========================================
        #
        # 
        # 以下是一些提前准备好的一些插件选项.
        # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
        # 如果不需要代码块里的某一项配置, 只需要删除相应行.
        #
        # 如果需要其他插件, 请按照示例自行添加.
        # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
        # 
        # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
        # 
        # 编译竞斗云固件:
        
        cat >> .config <<EOF
         CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        CONFIG_GNUTLS_ALPN=y
        CONFIG_GNUTLS_ANON=y
        CONFIG_GNUTLS_DTLS_SRTP=y
        CONFIG_GNUTLS_HEARTBEAT=y
        CONFIG_GNUTLS_OCSP=y
        CONFIG_GNUTLS_PSK=y
        CONFIG_LIBCURL_COOKIES=y
        CONFIG_LIBCURL_CRYPTO_AUTH=y
        CONFIG_LIBCURL_FILE=y
        CONFIG_LIBCURL_FTP=y
        CONFIG_LIBCURL_HTTP=y
        CONFIG_LIBCURL_NGHTTP2=y
        CONFIG_LIBCURL_OPENSSL=y
        CONFIG_LIBCURL_PROXY=y
        CONFIG_LIBCURL_TFTP=y
        CONFIG_LIBCURL_THREADED_RESOLVER=y
        CONFIG_LIBCURL_TLS_SRP=y
        CONFIG_LIBCURL_UNIX_SOCKETS=y
        CONFIG_LUCI_LANG_zh_Hans=y
        CONFIG_PACKAGE_TAR_BZIP2=y
        CONFIG_PACKAGE_TAR_GZIP=y
        CONFIG_PACKAGE_TAR_XZ=y
        CONFIG_PACKAGE_TAR_ZSTD=y
        CONFIG_PACKAGE_attr=y
        CONFIG_PACKAGE_autosamba=y
        CONFIG_PACKAGE_avahi-dbus-daemon=y
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_blkid=y
        CONFIG_PACKAGE_bzip2=y
        CONFIG_PACKAGE_ca-certificates=y
        CONFIG_PACKAGE_cgi-io=y
        CONFIG_PACKAGE_chinadns-ng=y
        CONFIG_PACKAGE_coreutils=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_coreutils-stat=y
        CONFIG_PACKAGE_coreutils-stty=y
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_dbus=y
        CONFIG_PACKAGE_default-settings=y
        CONFIG_PACKAGE_default-settings-chn=y
        CONFIG_PACKAGE_etherwake=y
        CONFIG_PACKAGE_hd-idle=y
        CONFIG_PACKAGE_ip-full=y
        CONFIG_PACKAGE_ip6tables-nft=y
        CONFIG_PACKAGE_ipset=y
        CONFIG_PACKAGE_iptables-mod-extra=y
        CONFIG_PACKAGE_iptables-nft=y
        CONFIG_PACKAGE_kmod-crypto-acompress=y
        CONFIG_PACKAGE_kmod-inet-diag=y
        CONFIG_PACKAGE_kmod-ip6tables=y
        CONFIG_PACKAGE_kmod-ipt-conntrack=y
        CONFIG_PACKAGE_kmod-ipt-core=y
        CONFIG_PACKAGE_kmod-ipt-extra=y
        CONFIG_PACKAGE_kmod-ipt-ipset=y
        CONFIG_PACKAGE_kmod-ipt-nat=y
        CONFIG_PACKAGE_kmod-ipt-nat6=y
        CONFIG_PACKAGE_kmod-ipt-physdev=y
        CONFIG_PACKAGE_kmod-lib-lzo=y
        CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
        CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
        CONFIG_PACKAGE_kmod-md-mod=y
        CONFIG_PACKAGE_kmod-md-raid0=y
        CONFIG_PACKAGE_kmod-md-raid1=y
        CONFIG_PACKAGE_kmod-md-raid10=y
        CONFIG_PACKAGE_kmod-netlink-diag=y
        CONFIG_PACKAGE_kmod-nf-ipt=y
        CONFIG_PACKAGE_kmod-nf-ipt6=y
        CONFIG_PACKAGE_kmod-nf-nat6=y
        CONFIG_PACKAGE_kmod-nft-compat=y
        CONFIG_PACKAGE_kmod-tun=y
        CONFIG_PACKAGE_libatomic=y
        CONFIG_PACKAGE_libattr=y
        CONFIG_PACKAGE_libavahi-client=y
        CONFIG_PACKAGE_libavahi-dbus-support=y
        CONFIG_PACKAGE_libbpf=y
        CONFIG_PACKAGE_libbz2=y
        CONFIG_PACKAGE_libcap=y
        CONFIG_PACKAGE_libcap-bin=y
        CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
        CONFIG_PACKAGE_libcap-ng=y
        CONFIG_PACKAGE_libcurl=y
        CONFIG_PACKAGE_libdaemon=y
        CONFIG_PACKAGE_libdbus=y
        CONFIG_PACKAGE_libelf=y
        CONFIG_PACKAGE_libexpat=y
        CONFIG_PACKAGE_libgnutls=y
        CONFIG_PACKAGE_libipset=y
        CONFIG_PACKAGE_libiptext=y
        CONFIG_PACKAGE_libiptext-nft=y
        CONFIG_PACKAGE_libiptext6=y
        CONFIG_PACKAGE_libiwinfo=y
        CONFIG_PACKAGE_libiwinfo-data=y
        CONFIG_PACKAGE_liblua=y
        CONFIG_PACKAGE_liblucihttp=y
        CONFIG_PACKAGE_liblucihttp-lua=y
        CONFIG_PACKAGE_liblucihttp-ucode=y
        CONFIG_PACKAGE_liblzma=y
        CONFIG_PACKAGE_libmount=y
        CONFIG_PACKAGE_libnetsnmp=y
        CONFIG_PACKAGE_libnghttp2=y
        CONFIG_PACKAGE_libparted=y
        CONFIG_PACKAGE_libpci=y
        CONFIG_PACKAGE_libpcre2=y
        CONFIG_PACKAGE_libpopt=y
        CONFIG_PACKAGE_libreadline=y
        CONFIG_PACKAGE_libruby=y
        CONFIG_PACKAGE_libstdcpp=y
        CONFIG_PACKAGE_libtasn1=y
        CONFIG_PACKAGE_libtirpc=y
        CONFIG_PACKAGE_libubus-lua=y
        CONFIG_PACKAGE_libuci-lua=y
        CONFIG_PACKAGE_liburing=y
        CONFIG_PACKAGE_libuv=y
        CONFIG_PACKAGE_libwebsockets-full=y
        CONFIG_PACKAGE_libxtables=y
        CONFIG_PACKAGE_libyaml=y
        CONFIG_PACKAGE_libzstd=y
        CONFIG_PACKAGE_lsblk=y
        CONFIG_PACKAGE_lua=y
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-app-accesscontrol=y
        CONFIG_PACKAGE_luci-app-argon-config=y
        CONFIG_PACKAGE_luci-app-arpbind=y
        CONFIG_PACKAGE_luci-app-diskman=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-app-homeproxy=y
        CONFIG_PACKAGE_luci-app-mosdns=y
        CONFIG_PACKAGE_luci-app-netdata=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-opkg=y
        CONFIG_PACKAGE_luci-app-quickstart=y
        CONFIG_PACKAGE_luci-app-samba4=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-store=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-upnp=y
        CONFIG_PACKAGE_luci-app-wolplus=y
        CONFIG_PACKAGE_luci-base=y
        CONFIG_PACKAGE_luci-compat=y

        CONFIG_PACKAGE_luci-lib-base=y
        CONFIG_PACKAGE_luci-lib-ip=y
        CONFIG_PACKAGE_luci-lib-ipkg=y
        CONFIG_PACKAGE_luci-lib-jsonc=y
        CONFIG_PACKAGE_luci-lib-nixio=y
        CONFIG_PACKAGE_luci-lib-taskd=y
        CONFIG_PACKAGE_luci-lib-xterm=y
        CONFIG_PACKAGE_luci-light=y
        CONFIG_PACKAGE_luci-lua-runtime=y
        CONFIG_PACKAGE_luci-mod-admin-full=y
        CONFIG_PACKAGE_luci-mod-network=y
        CONFIG_PACKAGE_luci-mod-status=y
        CONFIG_PACKAGE_luci-mod-system=y
        CONFIG_PACKAGE_luci-proto-ipv6=y
        CONFIG_PACKAGE_luci-proto-ppp=y
        CONFIG_PACKAGE_luci-theme-argon=y
        CONFIG_PACKAGE_mdadm=y
        CONFIG_PACKAGE_miniupnpd-nftables=y
        CONFIG_PACKAGE_mosdns=y
        CONFIG_PACKAGE_netdata=y
        CONFIG_PACKAGE_nlbwmon=y
        CONFIG_PACKAGE_openssh-sftp-server=y
        CONFIG_PACKAGE_openssl-util=y
        CONFIG_PACKAGE_parted=y
        CONFIG_PACKAGE_protobuf=y
        CONFIG_PACKAGE_protobuf-lite=y
        CONFIG_PACKAGE_quickstart=y
        CONFIG_PACKAGE_rpcd=y
        CONFIG_PACKAGE_rpcd-mod-file=y
        CONFIG_PACKAGE_rpcd-mod-iwinfo=y
        CONFIG_PACKAGE_rpcd-mod-luci=y
        CONFIG_PACKAGE_rpcd-mod-rrdns=y
        CONFIG_PACKAGE_rpcd-mod-ucode=y
        CONFIG_PACKAGE_ruby=y
        CONFIG_PACKAGE_ruby-bigdecimal=y
        CONFIG_PACKAGE_ruby-date=y
        CONFIG_PACKAGE_ruby-digest=y
        CONFIG_PACKAGE_ruby-enc=y
        CONFIG_PACKAGE_ruby-forwardable=y
        CONFIG_PACKAGE_ruby-pstore=y
        CONFIG_PACKAGE_ruby-psych=y
        CONFIG_PACKAGE_ruby-stringio=y
        CONFIG_PACKAGE_ruby-yaml=y
        CONFIG_PACKAGE_script-utils=y
        CONFIG_PACKAGE_shadow=y
        CONFIG_PACKAGE_shadow-chage=y
        CONFIG_PACKAGE_shadow-chfn=y
        CONFIG_PACKAGE_shadow-chgpasswd=y
        CONFIG_PACKAGE_shadow-chpasswd=y
        CONFIG_PACKAGE_shadow-chsh=y
        CONFIG_PACKAGE_shadow-common=y
        CONFIG_PACKAGE_shadow-expiry=y
        CONFIG_PACKAGE_shadow-faillog=y
        CONFIG_PACKAGE_shadow-gpasswd=y
        CONFIG_PACKAGE_shadow-groupadd=y
        CONFIG_PACKAGE_shadow-groupdel=y
        CONFIG_PACKAGE_shadow-groupmems=y
        CONFIG_PACKAGE_shadow-groupmod=y
        CONFIG_PACKAGE_shadow-groups=y
        CONFIG_PACKAGE_shadow-grpck=y
        CONFIG_PACKAGE_shadow-grpconv=y
        CONFIG_PACKAGE_shadow-grpunconv=y
        CONFIG_PACKAGE_shadow-lastlog=y
        CONFIG_PACKAGE_shadow-login=y
        CONFIG_PACKAGE_shadow-logoutd=y
        CONFIG_PACKAGE_shadow-newgidmap=y
        CONFIG_PACKAGE_shadow-newgrp=y
        CONFIG_PACKAGE_shadow-newuidmap=y
        CONFIG_PACKAGE_shadow-newusers=y
        CONFIG_PACKAGE_shadow-nologin=y
        CONFIG_PACKAGE_shadow-passwd=y
        CONFIG_PACKAGE_shadow-pwck=y
        CONFIG_PACKAGE_shadow-pwconv=y
        CONFIG_PACKAGE_shadow-pwunconv=y
        CONFIG_PACKAGE_shadow-su=y
        CONFIG_PACKAGE_shadow-useradd=y
        CONFIG_PACKAGE_shadow-userdel=y
        CONFIG_PACKAGE_shadow-usermod=y
        CONFIG_PACKAGE_shadow-utils=y
        CONFIG_PACKAGE_shadow-vipw=y
        CONFIG_PACKAGE_sing-box=y
        CONFIG_PACKAGE_smartd=y
        CONFIG_PACKAGE_smartdns=y
        CONFIG_PACKAGE_smartmontools=y
        CONFIG_PACKAGE_snmpd=y
        CONFIG_PACKAGE_tar=y
        CONFIG_PACKAGE_taskd=y
        CONFIG_PACKAGE_ttyd=y
        CONFIG_PACKAGE_ucode-mod-html=y
        CONFIG_PACKAGE_ucode-mod-lua=y
        CONFIG_PACKAGE_ucode-mod-math=y
        CONFIG_PACKAGE_uhttpd=y
        CONFIG_PACKAGE_uhttpd-mod-ubus=y
        CONFIG_PACKAGE_unzip=y
        CONFIG_PACKAGE_v2dat=y
        CONFIG_PACKAGE_v2ray-geoip=y
        CONFIG_PACKAGE_v2ray-geosite=y
        CONFIG_PACKAGE_wget-ssl=y
        CONFIG_PACKAGE_wsdd2=y
        CONFIG_PACKAGE_xtables-nft=y
        CONFIG_PACKAGE_xz=y
        CONFIG_PACKAGE_xz-utils=y
        CONFIG_PACKAGE_zlib=y
        CONFIG_PARTED_READLINE=y
        CONFIG_PCRE2_JIT_ENABLED=y
        CONFIG_SAMBA4_SERVER_AVAHI=y
        CONFIG_SAMBA4_SERVER_NETBIOS=y
        CONFIG_SAMBA4_SERVER_VFS=y
        CONFIG_SAMBA4_SERVER_WSDD2=y
        CONFIG_SING_BOX_BUILD_CLASH_API=y
        CONFIG_SING_BOX_BUILD_ECH=y
        CONFIG_SING_BOX_BUILD_GVISOR=y
        CONFIG_SING_BOX_BUILD_QUIC=y
        CONFIG_SING_BOX_BUILD_UTLS=y
        CONFIG_SING_BOX_BUILD_WIREGUARD=y
        CONFIG_TARGET_ROOTFS_PARTSIZE=950
        CONFIG_ZSTD_OPTIMIZE_O3=y
        CONFIG_shadow-all=y
        EOF
        
        # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
        # cat >> .config <<EOF
        # # CONFIG_TARGET_IMAGES_PAD is not set
        # # CONFIG_VMDK_IMAGES is not set
        # EOF
        # 
        # ========================固件定制部分结束========================
        # 
        
        sed -i 's/^[ \t]*//g' ./.config
        make defconfig     
        
    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 检查磁盘空间
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/packages
        tar -zcvf Packages.tar.gz ./*
        cp Packages.tar.gz $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        rm -rf packages
        config.buildinfo
        rm -rf *-x86-64-generic-kernel.bin
        rm -rf *-x86-64-generic.manifest
        rm -rf *-x86-64-generic-squashfs-rootfs.img.gz
        rm -rf *-x86-64-generic-ext4-rootfs.img.gz
        rm -rf *-x86-64-generic-ext4-combined.img.gz
        rm -rf *-x86-64-generic-ext4-combined-efi.img.gz
        rm -rf *-x86-64-generic-rootfs.tar.gz
        rm -rf *-x86-64-generic-squashfs-combined-efi.img.gz
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        
    - name: 计算编码
      run: |
        cd ${{ env.FIRMWARE }} && rm -rf sha256sums
        MD5=$(md5sum * | sed ':a;N;$!ba;s/\n/<br>/g')
        echo "MD5=$MD5" >> $GITHUB_ENV
        
    - name: 上传固件
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 发布固件
      id: release
      uses: ncipollo/release-action@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ steps.organize.outputs.release_tag }} for R619AC-128M
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ steps.organize.outputs.release_tag }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
        body: |
          🚀 源码版本:23.05SNAPSHOT
          🎈 内核:5.15
          🎨 当前使用版本:【编译前的最后一次[➦主源码](${{ env.REPO_URL }})更新记录】
          🔥 下载后请仔细校验MD5，如不正确请重新下载
          ${{ env.useVersionInfo }}
          
          `md5sum`
          > ${{ env.MD5 }}
          
    - name: 清理工作流程
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: 清理旧固件
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
